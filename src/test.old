#include <ultra64.h>
#include <global.h>


void func_80174BF0(void* a0) {
    u32 s0;
    s16* sp38;
    s16 v0;

    D_801D1520 = 320;
    D_801D1524 = 240;

    func_8010C0C0();
    func_80083BC4();
    func_801792A4();
    func_80179260();

    D_801D1528 = 0x80780000 - (u32)&D_803824C0;
    func_800865F8((u32)&D_803824C0, D_801D1528);

    func_800E93E0();

    staticContext->unkD4 = 0;

    osCreateMesgQueue(&D_801F8160, D_801F8178, 1);

    osSetEventMesg(5, &D_801F8160, NULL);

    osCreateMesgQueue(&D_801F8500, D_801F8518, 60);

    func_80085320(&D_801FB2D8, &D_801F9FB8, &D_801FA5B8_, 0, 256, &D_801DFD70);

    func_801772A0(&D_801F81C0, &D_801FA5B8, 16, D_8009B290, 1, &D_80099EF0);

    func_8008189C();

    func_80081250(&D_80099EF0, &D_801F84F8, &D_801F8500);

    func_80085320(&D_801FB2F8, &D_801FA5B8, &D_801FADB8_, 0, 256, &D_801DFD78);

    func_80173074(&D_801FB338, &D_801FADB8, 11, 10, &D_801F81C0, &D_80099EF0);

    func_80085320(&D_801FB318, &D_801FADB8, &D_801FB2B8_, 0, 256, &D_801DFD80);

    func_80176194(&D_801F8160, &D_80099EF0, 7, 15, &D_801FADB8);

    func_80173048(&D_801FB338);

    func_80085320(&D_801FB2B8, &D_801F87B8, &D_801F9FB8_, 0, 256, &D_801DFD88);

    osCreateThread(&D_801F8608, 4, (void (*)(void*))func_801748A0, a0, &D_801F9FB8_, 9);
    osStartThread(&D_801F8608);

    s0 = 0;
    while (s0 == 0) {
        sp38 = NULL;
        osRecvMesg(&D_801F8500, (OSMesg*)&sp38, 1);

        if (sp38 == NULL) break;

        v0 = *sp38;

        if (v0 == 3) {
            s0 = 1;
        } else if (v0 == 4) {
            func_8010C164();
        }
    }

    func_800812DC(&D_80099EF0, &D_801F84F8);

    osDestroyThread(&D_801F8608);
}
